#服务的端口号
server:
  port: 8001

#  当期的服务的名称  在进行注册中心的时候就会使用到
spring:
  application:
    name: cloud-payment-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
    driver-class-name: org.gjt.mm.mysql.Driver              # mysql驱动包 com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.137.234:3306/springcloud?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: kunyang
    password: 1353

eureka:
  client:
    #服务的提供者,表示是否将自己注册进EurekaServer默认为true。
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      #入住的是哪个主机的哪一个端口
      defaultZone: http://localhost:7001/eureka  #之前是单机版,现在是集群,所以要将8001注册到两个集群中
      #      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka  # 集群版
      #      主机名称的规范和修改
  instance:
    instance-id: payment8001
    #    为了后续更加直观的看微服务的ip和端口号所以加上这个
    prefer-ip-address: true     #访问路径可以显示IP地址
  #心跳检测与续约时间
  #开发时设置小些，保证服务关闭后注册中心能即使剔除服务
#  instance:
#    #Eureka客户端向服务端发送心跳的时间间隔，单位为秒(默认是30秒)   之前是每隔30秒发送一次心跳,每隔30天缴纳一次的房租
#    lease-renewal-interval-in-seconds: 1
#    #Eureka服务端在收到最后一次心跳后等待时间上限，单位为秒(默认是90秒)，超时将剔除服务
#    lease-expiration-duration-in-seconds: 2

mybatis:
  mapperLocations: classpath:mapper/*.xml
  type-aliases-package: com.kunyang.springcloud.entities   # 所有Entity别名类所在包


